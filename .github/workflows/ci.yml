name: CI Pipeline

on:
  push:
    branches: [ main ]
    tags: [ "*.*.*" ]
  pull_request:
    branches: [ main ]

permissions:
  packages: write
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x, 18.x, 20.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Auto-fix formatting with Prettier
        run: npx prettier --write "src/**/*.ts"

      #- name: Run tests
      #  run: npm test -- --ci --reporters=default --reporters=jest-junit --forceExit --detectOpenHandles
      #  env:
      #    JEST_JUNIT_OUTPUT_DIR: ./test-results

      - name: Build TypeScript
        run: npm run build

      #- name: Upload test results
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: test-results-node-${{ matrix.node-version }}
      #    path: ./test-results/junit.xml
      #    if-no-files-found: warn

  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from ha_addon/config.yaml
        id: extract-version
        run: |
          VERSION=$(grep '^version:' ha_addon/config.yaml | cut -d '"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Build and push base Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ env.VERSION }}
          build-args: |
            NODE_ENV=production
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-addon:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from ha_addon/config.yaml
        id: extract-version
        run: |
          VERSION=$(grep '^version:' ha_addon/config.yaml | cut -d '"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and push Add-on Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ha_addon/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-addon:latest
            ghcr.io/${{ github.repository }}-addon:${{ env.VERSION }}
          build-args: |
            NODE_ENV=production
            BUILD_FROM=ghcr.io/hassio-addons/base:14.2.2
          cache-from: type=gha
          cache-to: type=gha,mode=max
