name: Build & Push hm2mqtt Image

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      platform:
        required: true
        type: string
      base:
        required: false
        type: string
        default: ""
      context:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      build-args:
        required: false
        type: string
        default: ""
      image-suffix:
        required: true
        type: string
      digest-prefix:
        required: true
        type: string

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install yq
        run: sudo apt-get update && sudo apt-get install -y yq

      - name: Extract version from ha_addon/config.yaml
        id: extract_version
        run: |
          VERSION=$(yq '.version' ha_addon/config.yaml)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (labels only)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            latest
            ${{ env.VERSION }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ inputs.platform }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ env.VERSION }}${{ inputs.image-suffix }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NODE_ENV=production
            ${{ inputs.build-args }}
            BASE=${{ inputs.base }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
